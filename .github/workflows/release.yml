name: üê∂ Release Build

on:
  push:
    tags:
    - 'v*'

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Build & release
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      shell: pwsh
      run: |
        $sha = (git rev-parse --short HEAD)
        yarn --silent
        $env:SHORT_SHA=$sha; yarn release

    - name: Move artifacts
      id: vars
      shell: pwsh
      run: |
        $sha = (git rev-parse --short HEAD)
        md -Name ./dist/artifacts -Force
        Copy-Item ./dist/*.exe -Destination ./dist/artifacts/
        $file = Get-ChildItem -Path ./dist/artifacts/ -Filter "*.exe" | select-object -first 1
        $newName = "$($file.BaseName).$($sha)$($file.Extension)"
        Rename-Item -Path $file.FullName -NewName $newName
        echo "::set-output name=fileName::$($newName)"

    - name: Upload artifacts
      uses: actions/upload-artifact@v1.0.0
      with:
        name: ChampR-installer
        path: "./dist/artifacts"

#    - name: Create Release
#      id: create_release
#      uses: actions/create-release@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        tag_name: ${{ github.ref }}
#        release_name: ${{ github.ref }}
#        draft: false
#        prerelease: false

#    - name: Upload Release Assets
#      id: upload_release_assets
#      uses: actions/upload-release-asset@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        upload_url: ${{ steps.create_release.outputs.upload_url }}
#        asset_path: ./dist/artifacts/${{ steps.vars.outputs.fileName }}
#        asset_name: ${{ steps.vars.outputs.fileName }}
#        asset_content_type: application/vnd.microsoft.portable-executable
